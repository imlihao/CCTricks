{
  "ver": "1.0.27",
  "uuid": "6a55608a-5cf7-40a1-abb7-afab3a69d6be",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture2D(texture, uv) * v_color;\n  uv = uv * 2.0 - 1.0;\n  uv.y *= 1280./720.;\n  float grids = 16.;\n  float dist = length(uv);\n  float gd = 0.0;\n  gd = dist;\n  gd = fract(dist * grids);\n  float gid = floor(dist * grids);\n  float h = texture2D(texture, vec2(gid / grids, 0.5)).r * 0.25;\n  float blur = 4./720. * (gid + 1.);\n  float width = 0.01 * (gid) + h;\n  float mask = smoothstep(width+blur, width, abs(gd - 0.5));\n  vec3 color = vec3(mask * (gid+1.) / grids + h);\n  gl_FragColor = vec4(color, mask);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture(texture, uv) * v_color;\n  uv = uv * 2.0 - 1.0;\n  uv.y *= 1280./720.;\n  float grids = 16.;\n  float dist = length(uv);\n  float gd = 0.0;\n  gd = dist;\n  gd = fract(dist * grids);\n  float gid = floor(dist * grids);\n  float h = texture(texture, vec2(gid / grids, 0.5)).r * 0.25;\n  float blur = 4./720. * (gid + 1.);\n  float width = 0.01 * (gid) + h;\n  float mask = smoothstep(width+blur, width, abs(gd - 0.5));\n  vec3 color = vec3(mask * (gid+1.) / grids + h);\n  gl_FragColor = vec4(color, mask);\n}"
      }
    }
  ],
  "subMetas": {}
}