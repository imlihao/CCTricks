{
  "ver": "1.0.27",
  "uuid": "3c92b705-eac9-4f53-aefb-d9808839cf20",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nvarying vec2 v_uv1;\nuniform sampler2D texture;\nuniform vec2 sz;\nfloat median(float r, float g, float b) {\n  return max(min(r, g), min(max(r, g), b));\n}\nfloat screenPxRange() {\n  float halfDistDelta = 2. * 0.5;\n  return sz.x / 32. * halfDistDelta;\n}\nvoid main() {\n  vec2 uv = v_uv0.xy;\n  vec3 msd = texture2D(texture, uv).rgb;\n  float sd = median(msd.r, msd.g, msd.b);\n  float screenPxDistance = screenPxRange()*(sd - 0.5);\n  float opacity = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n  gl_FragColor = vec4(1., 1., 1., opacity);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\nin vec2 v_uv0;\nin vec2 v_uv1;\nuniform sampler2D texture;\nuniform UARGS {\n  vec2 sz;\n};\nfloat median(float r, float g, float b) {\n  return max(min(r, g), min(max(r, g), b));\n}\nfloat screenPxRange() {\n  float halfDistDelta = 2. * 0.5;\n  return sz.x / 32. * halfDistDelta;\n}\nvoid main() {\n  vec2 uv = v_uv0.xy;\n  vec3 msd = texture(texture, uv).rgb;\n  float sd = median(msd.r, msd.g, msd.b);\n  float screenPxDistance = screenPxRange()*(sd - 0.5);\n  float opacity = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n  gl_FragColor = vec4(1., 1., 1., opacity);\n}"
      }
    }
  ],
  "subMetas": {}
}